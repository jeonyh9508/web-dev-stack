const usid=require("node-uid")
const mysql=require("mysql")
const connect=mysql.createConnection({
    user:"root",
    password:"root",
    database:'lxystackroom'
})

const query=(data)=>{
    return new Promise((resole,eject)=>{
        console.log(data)
        connect.query(data,(error,sql)=>{
            console.log(sql,"safdsgfdhjh")
            if(error){
                eject(error)
                return ;
            }
            resole(sql)
        }) 
    })
}
module.exports={
    // 添加数据
    add(obj){
      return query(`insert into user (name,author,type,date,Press,useid) values (
    "${Object.entries(obj).map(it=>
        it[1]
     ).join('","')}","${usid(10)}")`)     
    },
    // 更改数据
    change(obj){
    return query(`update user set ${ Object.entries(obj.res).map(it=> 
            `${it[0]}="${it[1]}"`  
            ).join(',')} where useid="${obj.id}"`)  
    },
    // 获取所有数据
    hot(){
        return query(`select * from user `)
    },
    // tab切换
    serch(obj){
        return query(`select name, useid, author, type, date, Press from user WHERE type="${obj.type}"`)
    },
    // 删除
    delect(obj){
        return query(`delete from user where useid="${obj.id}"`)
    },
    // 排序
    select(obj){
        console.log(obj,"obj")
        // return query(`select * from user order by name desc`)
        if(obj.flag){
            return query(`select * from user order by name `)
        }else{
            return query(`select * from user order by name desc`)
        }
    }
}
// const storage=multer.diskStorage({
//     destination(error,file,cb){
//         cb(null,"pulick")
//     },
//     filename(req,filename,cb){
//         cb(null,filename.originalname)
//     }
// })
// const uplode=multer({storage})
// router.post("/phone",uplode.single("phone"),async (ctx)=>{
//     // console.log(ctx.req)
//     ctx.body=ctx.req.file.path
//     // ctx.res.end("1")
// })
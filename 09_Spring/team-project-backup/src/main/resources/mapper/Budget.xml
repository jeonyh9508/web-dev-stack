<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sh.haagendazo.bio.mapper.ProjectBudgetMapper">
<resultMap type="BudgetDTO" id="BudgetMap">
	<id property="budgetId" column="budget_id" />
		<result property="projectId" column="project_id"/>
		<result property="projectName" column="project_name" javaType="java.lang.String"/>
		<result property="item" column="item"/>
		<result property="amount" column="amount"/>
		<result property="usedAmount" column="used_amount"/>
		<result property="approvedBy" column="approved_by"/>
		<result property="status" column="status"/>
		<result property="comment" column="comment"/>
		<result property="approvedAt" column="approved_at"/>
		<result property="userName" column="name"/>
</resultMap>

<select id="allBudget" parameterType="BudgetDTO" resultMap="BudgetMap">
    SELECT name, project.project_name, item, amount, used_amount, approved_by, approval_history.status, approved_at FROM project JOIN project_budget USING (project_id) JOIN approval_history USING (project_id) JOIN project_member USING (project_id) JOIN user USING (user_id)  
    <where>
        <choose>
	 	<when test="select == 'projectName'">
		 	<if test ="search != null">AND project_name LIKE CONCAT ('%', #{search},'%')</if>
		 	<if test ="search == null"></if>
	 	</when>
	 	<when test="select == 'approvedBy'">
		 	<if test ="search != null">AND approved_by LIKE CONCAT ('%', #{search},'%')</if>
		 	<if test ="search == null"></if>
	 	</when>
	 	<when test="select == 'status'">
		 	<if test ="search != null">AND status LIKE CONCAT ('%', #{search},'%')</if>
		 	<if test ="search == null"></if>
	 	</when>
	 	</choose>
    </where>
</select>

	<select id="showBudget" parameterType="PagingDTO" resultMap="BudgetMap">
		SELECT budget_id, project_id, name, project.project_name, item, amount, used_amount, approved_by, approval_history.status, approved_at FROM project JOIN project_budget USING (project_id) JOIN approval_history USING (project_id) JOIN project_member USING (project_id) JOIN user USING (user_id) LIMIT #{offset}, #{limit}
	</select>
	
	<select id="total" resultType="int">
		SELECT COUNT(budget_id) FROM project JOIN project_budget USING (project_id) JOIN approval_history USING (project_id) JOIN project_member USING (project_id) JOIN user USING (user_id)
	</select>
	
	<delete id="deleteBudget" parameterType="ArrayList">
		DELETE FROM project_budget WHERE budget_id IN
		<foreach collection="idList" item="budgetId" open="(" close=")" separator=",">
		#{budgetId}
		</foreach>
	</delete>
	

  <!--
 <insert id="insertBudget" parameterType="ProjectBudget"></insert>

 <update id="updateProject"></update>
 -->
</mapper>